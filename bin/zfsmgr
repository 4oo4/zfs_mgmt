require "thor"
require "zfs_mgmt"

class Snapshot < Thor
  desc "destroy", "apply the snapshot destroy policy to zfs"
  def destroy()
    ZfsMgmt.snapshot_destroy(noop: options[:noop], verbopt: options[:verbose], debugopt: options[:debug])
  end
end

class ZfsMgr < Thor
  class_option :noop, :type => :boolean, :default => false
  class_option :debug, :type => :boolean, :default => false
  class_option :verbose, :type => :boolean, :default => false

  desc "readsnaps", "actually just run readsnaps"
  def readsnaps()
    print ZfsMgmt.readsnaps().join('')
  end
  desc "zfsget FS", "run zfs get"
  option :properties, :type => :array, :default => ['name']
  option :types, :type => :array, :default => ['filesystem','volume']
  def zfsget(fs)
    pp ZfsMgmt.zfsget(properties: options[:properties], types: options[:types],fs: fs)
  end
  desc "snapshot SUBCOMMAND ...ARGS", "manage snapshots"
  subcommand "snapshot", Snapshot
end

ZfsMgr.start(ARGV)
